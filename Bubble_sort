def bubbleSort(arr):
    n = 7
    for i in range(n):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    print("%d" % arr[i])

# Driver code to test above
arr = [64, 34, 25, 12, 22, 11, 90]

bubbleSort(arr)

print("Sorted array is:")
for i in range(len(arr)):
    print("%d" % arr[i])

64 | 34 | 25 | 12 | 22 | 11 | 90

34 | 25 | 12 | 22 | 11 | 64 | 90
25 | 12 | 22 | 11 | 34 | 64 | 90
12 | 22 | 11 | 25 | 34 | 64 | 90
12 | 11 | 22 | 25 | 34 | 64 | 90
11 | 12 | 22 | 25 | 34 | 64 | 90

def quickSort(arr, low, high):
    if low < high:
        pi = partition(arr, low, high)

        quickSort(arr, low, pi - 1)
        quickSort(arr, pi + 1, high)


def partition(arr, low, high):
    i = (low - 1)
    pivot = arr[high]

    for j in range(low, high):
        if arr[j] <= pivot:
            i = i + 1
            arr[i], arr[j] = arr[j], arr[i]

    arr[i + 1], arr[high] = arr[high], arr[i + 1]
    return (i + 1)


# Driver code to test above
arr = [10, 7, 8, 9, 1, 5]
n = len(arr)
quickSort(arr, 0, n - 1)
print("Sorted array is:")
for i in range(n):
    print("%d" % arr[i]),

10 | 7 | 8 | 9 | 1 | 5
1 | 7 | 8 | 9 | 10 | 5
1 | 5 | 8 | 9 | 10 | 7
1 | 5 | 7 | 9 | 10 | 8
1 | 5 | 7 | 8 | 10 | 9
